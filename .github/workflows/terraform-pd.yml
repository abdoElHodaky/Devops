name: 'Terraform-Destroy'

on:
  workflow_dispatch:


env:
  ARKADE_BIN: " /home/runner/.arkade/bin" 
  AWS_ACCESS_KEY_ID: ${{secrets.TF_VAR_AWS_ACCESS_KEY}}
  AWS_SECRET_ACCESS_KEY: ${{secrets.TF_VAR_AWS_ACCESS_SECRET}}
  AWS_REGION: ${{secrets.TF_VAR_AWS_REGION}}
  TF_VAR_EKS_CLUSTER_NAME: ${{secrets.TF_VAR_EKS_CLUSTER_NAME}}
  TF_VAR_GHCR_PAT: ${{secrets.TF_VAR_GHCR_PAT}}
  TF_VAR_DOCKER_PAT: ${{secrets.TF_VAR_DOCKER_PAT}}
jobs:
  arkade:
     runs-on: ubuntu-latest
     steps:
        - 
           name: "setup arkade"
           uses: alexellis/setup-arkade@v1
        
        - 
           name: "arkade Init"
           uses: alexellis/arkade-get@master
           with:
            kubectl: latest
            helm: latest
            aws: latest 
  
  terraform:
    needs:
      - arkade 
    name: 'Terraform'
    runs-on: ubuntu-latest
    #environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
        

    steps:

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    -   uses: actions/checkout@v4

    - run: |
       git pull
       
    - name: Terraform destroy 
      run: | 
        cd terraform && terraform init -input=false
        terraform destroy --auto-approve -input=false
       
    - name: Commit and Push
      uses: GuillaumeFalourd/git-commit-push@v1.3
      with:
          commit_message: "Push changes"
          target_branch: ${{github.ref}}
          access_token: ${{ secrets.GITHUB_TOKEN }}
